package main

import (
	"bufio"
	"fmt"
	"github.com/xuri/excelize/v2"
	"os"
	"time"
)

func main() {
	// 读取excel生成对应的sql
	file, err := excelize.OpenFile("test/hkqs/file/海口摄像头编码表20230625.xlsx")
	if err != nil {
		fmt.Println(err)
		return
	}
	defer func() {
		if err = file.Close(); err != nil {
			fmt.Println(err)
		}
	}()
	sheetName := "Sheet1"
	rows, err := file.GetRows(sheetName)
	if err != nil {
		fmt.Println(err)
		return
	}

	// 桥梁名称
	tunnelMaps := map[string]any{
		"QZDQ":        "83",
		"SJDQ":        "84",
		"QHLJQ":       "103",
		"NDJDQ":       "104",
		"HRDQ":        "105",
		"HXDQ":        "106",
		"BHLJQ":       "107",
		"LKNLJQ":      "108",
		"HPQ":         "109",
		"NDLJQ":       "110",
		"XBDQ":        "111",
		"QZSD":        "115",
		"GJHZZXTD":    "116",
		"LKNMSHQ":     "117",
		"QZLQ":        "118",
		"HJQ":         "119",
		"MXPHQ":       "120",
		"SZFQ":        "121",
		"DFQ":         "122",
		"BHXLYHTLKXQ": "123",
		"BHXLYHTLTQ":  "124",
		"DKQ":         "125",
		"FXQ":         "126",
		"LFQ":         "127",
		"MSHYHQ":      "128",
		"SDQ":         "129",
		"WHYQ":        "130",
		"XMQ":         "131",
		"XQLQ":        "132",
		"XTDSCQ":      "133",
		"RMQ":         "134",
		"DTQ":         "136",
		"GQDQ":        "137",
		"KFCLQ":       "138",
		"LNDQ":        "139",
		"WDQ":         "140",
		"XSHQ":        "141",
		"XBQ":         "142",
		"YLXLQ":       "143",
		"ZSNQ":        "144",
		"XSQ":         "145",
		"JNHQ":        "146",
		"KFCXQ":       "147",
		"LKBLQ":       "148",
		"MSHDQ":       "150",
		"MSHSQ":       "151",
		"HDWLDQ":      "152",
		"BHJKQ":       "153",
		"XBYHQ":       "154",
		"BSYQ":        "155",
		"GTCQ":        "156",
		"LHCSCQ":      "157",
		"GXDMSHQ":     "158",
		"YSCQ":        "159",
		"BSQ":         "160",
		"HFLJQ":       "161",
		"HRJLQ":       "162",
		"HXLJQ":       "163",
		"BYTQ":        "164",
		"CHTQ":        "165",
		"DYTQ":        "166",
		"DHTQ":        "167",
		"DJQ":         "168",
		"HFTQ":        "169",
		"HPTQ":        "170",
		"HSTQ":        "171",
		"LHTQ":        "172",
		"LZQ":         "173",
		"LYQ":         "174",
		"MZTQ":        "175",
		"NHTQ":        "176",
		"QZTQ":        "177",
		"RMTQ":        "178",
		"SYTQ":        "179",
		"SZTQ":        "180",
		"WGTQ":        "181",
		"WLYTQ":       "182",
		"WMTQ":        "183",
		"WZTQ":        "184",
		"XQLJGQ":      "185",
		"XGTQ":        "186",
		"YZTQ":        "187",
		"YYTQ":        "188",
		"YHTQ":        "189",
		"HSTQ1":       "190",
		"QZSDTQ":      "191",
		"DKCTQ":       "192",
		"MXPTQ":       "193",
		"CYCYHQ":      "194",
		"CYCEHQ":      "195",
		"LSZQNDJZQ2":  "196",
		"GDQ":         "197",
		"ZCQ":         "198",
		"HMYQ":        "199",
		"HHQ":         "200",
		"HSQ":         "201",
		"BJDQED":      "202",
		"BJDDSQ":      "203",
		"HGNHQ":       "204",
		"YWXQ":        "205",
		"HYDDMSH":     "206",
		"GNTDQ":       "207",
		"YWDLQ":       "208",
		"XRLQ":        "209",
		"WJLQ":        "210",
		"HDBMTQ":      "211",
		"HCHMHSQ":     "212",
		"HYDDYQ":      "213",
		"HYDDEQ":      "214",
		"HYDDSHHDQ":   "215",
		"HYDDSHHDQ1":  "216",
		"HYDDWHHDQ":   "217",
		"HYDDLHHDQ":   "218",
		"HYDDQHHDQ":   "219",
		"LSCLWYHQ":    "220",
		"MXLHJTQ":     "221",
		"BJDQSHQ":     "222",
		"BJDDWHQ":     "223",
		"GLYLJQ":      "224",
		"LGDDYQ":      "225",
		"HTLQ":        "226",
		"XDDQ":        "227",
		"JDDDTLHEQ":   "228",
		"JDDDTLHSQ":   "229",
		"S81NMLJQ":    "230",
		"XBDSHLQ":     "239",
		"BHDDQ":       "240",
		"HXKSL":       "241",
		"KSLQXXYTQ":   "242",
		"KSLQXHRTQ":   "243",
		"KSLQXHKTQ":   "244",
		"WMDYJTD":     "245",
		"CLSHLQ":      "246",
		"MSQ":         "247",
		"YHDDCLQ":     "248",
		"HDSYXXYQ":    "249",
		"HDSYXXEQ":    "250",
		"GHYQ":        "251",
		"GHEQ":        "252",
		"GHSQ":        "253",
		"HJYZDRXTQ":   "254",
		"JDDDTLHQ":    "255",
		"BJDDMYHQ":    "256",
		"BJDDNYXQ":    "257",
		"BJDDDMQ":     "258",
		"BJDDDFLTHQ":  "259",
		"BJDDRXTDYQ":  "260",
		"BJDDRXTDEQ":  "261",
		"WMDSD":       "263",
		"CYSQ":        "266",
		"XZCQ":        "267",
		"k2+298TDQ":   "269",
		"k3+245BSTQ":  "270",
		"CDQ":         "271",
		"10ZDXTD":     "272",
		"SDLQ":        "273",
		"k4+788BSTSQ": "274",
		"DHDQ":        "278",
		"测试用":         "279",
		"1":           "280",
		"HTDLQ":       "282",
		"DFLTHTD":     "283",
		"JKZX":        "285",
		"SDZKS":       "286",
		"DFLTHQTD":    "288",
		"KANHULEI":    "289",
		"CCJD":        "290",
		"NBHQ":        "292",
		"PLHQ":        "293",
		"RSHQ":        "294",
	}
	// 线路映射,线路名称+空间类型+线路类型作为key，id作为value
	line_space_id := map[string]string{
		"NZXCK-67-263":       "385",
		"NXZRK-67-263":       "386",
		"BZXYSBF-67-263":     "387",
		"AYSBF-67-263":       "388",
		"BYSBF-67-263":       "389",
		"CYSBF-67-263":       "390",
		"DYSBF-67-263":       "391",
		"ZXFS-68-263":        "392",
		"CFSBF-68-263":       "393",
		"NZX-22-263":         "394",
		"BZX-22-263":         "395",
		"AZD-22-263":         "396",
		"BZD-22-263":         "397",
		"CZD-22-263":         "398",
		"DZD-22-263":         "399",
		"XSBFQPS-64-263":     "400",
		"XSBFQPJ-64-263":     "401",
		"XSBFFJ-64-263":      "402",
		"XSBFPYJF-64-263":    "403",
		"XSBFPFJF-64-263":    "404",
		"XSBFBYJ-64-263":     "405",
		"XSBF10KVPDJ-64-263": "406",
		"XSBF400VPDJ-64-263": "407",
		"XSBFXFBF-64-263":    "408",
		"XSBFXFSC-64-263":    "409",
		"XSBFKZS-64-263":     "410",
		"XSBFXFJF-64-263":    "411",
		"XSBFZBS-64-263":     "412",
		"XSBFYJZMDYS-64-263": "413",
		"XSBFZMPDJ-64-263":   "414",
		"XSBFRDJKS-64-263":   "415",
		"XSBFDLJ-64-263":     "416",
		"DSBFPYJF-23-263":    "417",
		"DSBFPFJF-23-263":    "418",
		"DSBFLTJ-23-263":     "419",
		"DSBFQS-23-263":      "420",
		"DSBFZMPDJ-23-263":   "421",
		"DSBFQPJ-23-263":     "422",
		"DSBFKZS-23-263":     "423",
		"DSBF10KVPDS-23-263": "424",
		"DSBF100VPDS-23-263": "425",
		"DSBFXFJ-23-263":     "426",
		"DSBFBFJF-23-263":    "427",
		"DSBFRDKZS-23-263":   "428",
		"DSBFYJZMDYS-23-263": "429",
		"DSBFZBS-23-263":     "430",
		"DSBFDLJ-23-263":     "431",
		"DSBFBYJ-23-263":     "432",
		"DSBFXFBF-23-263":    "433",
		"DSBFPFJ-23-263":     "434",
		"DSBFDLJC-23-263":    "435",
	}

	component_id := map[string]any{
		"JBZM":  "143",
		"YJZM":  "144",
		"JKSXT": "146",
		"LM":    "189",
		"CS":    "191",
		"ZSMB":  "192",
		"HJG":   "193",
		"BG":    "194",
		"JQZM":  "202",
		"YDZM":  "203",
		"FZQ":   "209",
		"TD":    "235",
		"DGY":   "236",
		"TCGB":  "352",
		"SXT":   "355",
		"SD":    "357",
		"TJ":    "6",
		"ZM":    "102",
		"JK":    "103",
	}
	object_id := map[string]string{
		"S": "114", // 设施
		"E": "115", // 设备
	}
	running_water_id := map[string]string{
		"0001": "10",
		"0002": "11",
		"0003": "45",
		"0004": "46",
		"0005": "47",
		"0006": "48",
		"0007": "49",
		"0008": "50",
		"0009": "51",
		"0010": "52",
		"0011": "373",
		"0012": "374",
		"0013": "375",
		"0014": "376",
		"0015": "377",
		"0016": "378",
		"0017": "379",
		"0018": "380",
		"0019": "381",
		"0020": "382",
		"0021": "383",
		"0022": "384",
		"0023": "385",
		"0024": "386",
		"0025": "387",
		"0026": "388",
		"0027": "389",
		"0028": "390",
		"0029": "391",
		"0030": "392",
		"0031": "393",
		"0032": "394",
		"0033": "395",
		"0034": "396",
		"0035": "397",
		"0036": "398",
		"0037": "399",
		"0038": "400",
		"0039": "401",
		"0040": "402",
		"0041": "403",
		"0042": "404",
		"0043": "405",
		"0044": "406",
		"0045": "407",
		"0046": "408",
		"0047": "409",
		"0048": "410",
		"0049": "411",
		"0050": "412",
		"0051": "413",
		"0052": "414",
		"0053": "415",
		"0054": "416",
		"0055": "417",
		"0056": "418",
		"0057": "419",
		"0058": "420",
		"0059": "421",
		"0060": "422",
		"0061": "423",
		"0062": "424",
		"0063": "425",
		"0064": "426",
		"0065": "427",
		"0066": "428",
		"0067": "429",
		"0068": "430",
		"0069": "431",
		"0070": "432",
		"0071": "433",
		"0100": "434",
		"0101": "435",
		"0102": "436",
		"0103": "437",
		"0104": "438",
		"0105": "439",
		"0106": "440",
		"0107": "441",
		"0108": "442",
		"0109": "443",
	}

	space_type_id := map[string]string{
		"SXT": "372",
	}

	// 线路类型(桥梁或隧道编码)
	line_type := map[string]string{}

	space_unit_id := map[string]string{
		"001": "12",
		"002": "13",
		"003": "24",
		"004": "25",
		"005": "26",
		"006": "27",
		"007": "31",
		"008": "32",
		"009": "33",
		"010": "34",
		"011": "35",
		"012": "36",
		"013": "37",
		"014": "38",
		"015": "39",
		"016": "40",
		"017": "41",
		"018": "42",
		"019": "43",
		"020": "44",
		"021": "60",
		"022": "70",
		"023": "71",
		"024": "72",
		"025": "73",
		"026": "74",
		"027": "75",
		"028": "76",
		"029": "77",
		"030": "78",
		"031": "79",
		"032": "80",
		"033": "81",
		"034": "82",
		"035": "83",
		"036": "84",
		"037": "85",
		"038": "86",
		"039": "87",
		"040": "88",
		"041": "89",
		"042": "90",
		"043": "91",
		"044": "92",
		"045": "93",
		"046": "94",
		"047": "95",
		"048": "96",
		"049": "97",
		"050": "98",
		"051": "99",
		"052": "100",
		"053": "101",
	}
	// INSERT INTO `stec_bytd`.`bt_component_code_manager` (`record_create_date`,`record_update_date`,`code`,`bridge_tunnel_id`,`city_id`,`component_id`,
	//`end_number`,`line_space_id`,`object_id`,`running_water_id`,`space_type_id`,`space_unit_id`,`start_number`,`sub_component_id`,`device_id`,`psn`,`flag`,
	//`bit`,`alarm_status`,`model_id`,`model_ids`) VALUES (
	//'2023-05-26 09:53:36.067000','2023-05-26 09:53:36.067000','SZS-BYTD69-S-TJ-NZS-TD-BF-017-0002',83,
	//135,172,'LK1+800',6,34,36,24,51,'LK1+788',173,'745204',20230526095336189,0,0,0,'745204','745204,745205,745206,745207,745208,745209,745210,745211,745212,
	//753621,753622');

	psn := fmt.Sprintf("%s%s", time.Now().Format("20060102150405"), "001")
	fmt.Println(psn)
	f, err := os.Create("test/hkqs/save/t.txt")
	if err != nil {
		panic(err)
	}
	defer f.Close()
	writer := bufio.NewWriter(f)
	defer writer.Flush()
	for i, row := range rows {
		if i > 0 {
			sql := "INSERT INTO `stec_hkqs`.`bt_component_code_manager` (`record_create_date`,`record_update_date`,`code`,`bridge_tunnel_id`,`city_id`," +
				"`component_id`, `end_number`,`line_space_id`,`object_id`,`running_water_id`,`space_type_id`,`space_unit_id`,`start_number`,`sub_component_id`) VALUES ('2023-06-07 09:53:36.067000','2023-06-07 09:53:36.067000',"
			sql += "'" + row[18] + "',"              // code
			sql += tunnelMaps[row[3]].(string) + "," // 桥梁隧道id
			sql += "117" + ","
			sql += component_id[row[7]].(string) + ",'"                                          // 构建大类
			sql += row[16] + "',"                                                                // 结束里程
			sql += line_space_id[row[13]+"-"+space_type_id[row[11]]+"-"+line_type[row[3]]] + "," // 线路空间, key是线路名称+空间类型+线路类型（隧道编号），值是线路id
			sql += object_id[row[5]] + ","                                                       // 对象属性
			sql += running_water_id[row[17]] + ","                                               // 流水编号
			sql += space_type_id[row[11]] + ","                                                  // 空间类型
			sql += space_unit_id[row[14]] + ",'"                                                 // 空间单元
			sql += row[15] + "',"                                                                // 开始里程
			sql += component_id[row[9]].(string)                                                 // 构建小类
			sql += ");\n"
			fmt.Println(sql)
			_, err = writer.WriteString(sql)
			if err != nil {
				panic(err)
			}
		}
	}

}
